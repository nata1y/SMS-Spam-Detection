# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.8.10-slim

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - apt update && apt install build-essential ffmpeg libsm6 libxext6 -y
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install cython
  - pip install -r requirements.txt
  - pip install alibi_detect

test:
  script:
    - export PYTHONPATH=$PYTHONPATH:.
    - python train_model/get_data.py
    - python train_model/text_preprocessing.py
    - python train_model/text_classification.py
    - python production_endpoint/get_data.py
    - python setup.py install
    - python setup.py test
    - pip install tox flake8
    - tox -e python flake8

lint:
  script:
    - pylint --rcfile=.pylint.rc train_model deploy_model monitoring datadrift_detect production_endpoint
  #   - pylint --output-format=text train_model deploy_model monitoring datadrift_detect production_endpoint | tee pylint.txt || pylint-exit $?
  #   - score=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' pylint.txt)
  #   - echo "Pylint score was $score"
  #   - mkdir public
  #   - anybadge --value=$score --file=public/pylint.svg pylint
  # artifacts:
  #   paths:
  #     - public/pylint.svg
    
run:
  script:
    - python setup.py bdist_wheel
    # an alternative approach is to install and run:
    - pip install dist/*
    # run the command here
  artifacts:
    paths:
      - dist/*.whl

pages:
  script:
    - pip install sphinx sphinx-rtd-theme
    - cd doc ; make html
    - mv build/html/ ../public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
